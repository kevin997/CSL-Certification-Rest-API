{
    "openapi": "3.0.0",
    "info": {
        "title": "CSL Certification Platform API",
        "description": "API documentation for the CSL Certification Platform",
        "contact": {
            "name": "CSL Support",
            "email": "support@csl-certification.com"
        },
        "license": {
            "name": "Proprietary",
            "url": "https://csl-certification.com/license"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "CSL Certification Platform API Server"
        }
    ],
    "paths": {
        "/api/enrollments/{enrollmentId}/activity-completions": {
            "get": {
                "tags": [
                    "Activity Completions"
                ],
                "summary": "Get all activity completions for an enrollment",
                "description": "Returns a list of all activity completions for a specific enrollment",
                "operationId": "getEnrollmentActivityCompletions",
                "parameters": [
                    {
                        "name": "enrollmentId",
                        "in": "path",
                        "description": "Enrollment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "enrollment_id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "activity_id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "started",
                                                            "in_progress",
                                                            "completed",
                                                            "failed"
                                                        ],
                                                        "example": "completed"
                                                    },
                                                    "score": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 85,
                                                        "nullable": true
                                                    },
                                                    "time_spent": {
                                                        "description": "Time spent in seconds",
                                                        "type": "integer",
                                                        "example": 1200,
                                                        "nullable": true
                                                    },
                                                    "attempts": {
                                                        "type": "integer",
                                                        "example": 2,
                                                        "nullable": true
                                                    },
                                                    "completed_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "activity": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Introduction to Certification"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "quiz"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Enrollment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/enrollments/{enrollmentId}/activities/{activityId}/completion": {
            "put": {
                "tags": [
                    "Activity Completions"
                ],
                "summary": "Update activity completion status",
                "description": "Updates the status of an activity completion for a specific enrollment and activity",
                "operationId": "updateActivityCompletion",
                "parameters": [
                    {
                        "name": "enrollmentId",
                        "in": "path",
                        "description": "Enrollment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "started",
                                            "in_progress",
                                            "completed",
                                            "failed"
                                        ],
                                        "example": "completed"
                                    },
                                    "score": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 85,
                                        "nullable": true
                                    },
                                    "time_spent": {
                                        "description": "Time spent in seconds",
                                        "type": "integer",
                                        "example": 1200,
                                        "nullable": true
                                    },
                                    "attempts": {
                                        "type": "integer",
                                        "example": 2,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Activity completion updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity completion updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "enrollment_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "activity_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "started",
                                                        "in_progress",
                                                        "completed",
                                                        "failed"
                                                    ],
                                                    "example": "completed"
                                                },
                                                "score": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 85,
                                                    "nullable": true
                                                },
                                                "time_spent": {
                                                    "description": "Time spent in seconds",
                                                    "type": "integer",
                                                    "example": 1200,
                                                    "nullable": true
                                                },
                                                "attempts": {
                                                    "type": "integer",
                                                    "example": 2,
                                                    "nullable": true
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Enrollment or Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/enrollments/{enrollmentId}/progress": {
            "get": {
                "tags": [
                    "Activity Completions"
                ],
                "summary": "Get enrollment progress",
                "description": "Returns the progress information for a specific enrollment",
                "operationId": "getEnrollmentProgress",
                "parameters": [
                    {
                        "name": "enrollmentId",
                        "in": "path",
                        "description": "Enrollment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_activities": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "completed_activities": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "required_activities": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "completed_required_activities": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "progress_percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50
                                                },
                                                "required_progress_percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Enrollment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/enrollments/{enrollmentId}/activities/{activityId}/reset": {
            "post": {
                "tags": [
                    "Activity Completions"
                ],
                "summary": "Reset activity completion",
                "description": "Resets the completion status of a specific activity for an enrollment",
                "operationId": "resetActivityCompletion",
                "parameters": [
                    {
                        "name": "enrollmentId",
                        "in": "path",
                        "description": "Enrollment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity completion reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity completion reset successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "enrollment_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "activity_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "started"
                                                },
                                                "score": {
                                                    "type": "null"
                                                },
                                                "time_spent": {
                                                    "type": "null"
                                                },
                                                "attempts": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "completed_at": {
                                                    "type": "null"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Enrollment or Activity not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/enrollments/{enrollmentId}/reset-all": {
            "post": {
                "tags": [
                    "Activity Completions"
                ],
                "summary": "Reset all activity completions",
                "description": "Resets all activity completions for a specific enrollment",
                "operationId": "resetAllActivityCompletions",
                "parameters": [
                    {
                        "name": "enrollmentId",
                        "in": "path",
                        "description": "Enrollment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All activity completions reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All activity completions reset successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Enrollment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/blocks/{blockId}/activities": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Get all activities for a block",
                "description": "Returns a list of all activities for a specific block",
                "operationId": "getBlockActivities",
                "parameters": [
                    {
                        "name": "blockId",
                        "in": "path",
                        "description": "Block ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "block_id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Introduction Video"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Watch this introduction video to understand the certification process",
                                                        "nullable": true
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "text",
                                                            "video",
                                                            "quiz",
                                                            "lesson",
                                                            "assignment",
                                                            "documentation",
                                                            "event",
                                                            "certificate",
                                                            "feedback"
                                                        ],
                                                        "example": "video"
                                                    },
                                                    "order": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "is_required": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "estimated_time": {
                                                        "description": "Estimated time in minutes",
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Block not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Create a new activity",
                "description": "Creates a new activity for a specific block",
                "operationId": "createActivity",
                "parameters": [
                    {
                        "name": "blockId",
                        "in": "path",
                        "description": "Block ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Introduction Video"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Watch this introduction video to understand the certification process"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "text",
                                            "video",
                                            "quiz",
                                            "lesson",
                                            "assignment",
                                            "documentation",
                                            "event",
                                            "certificate",
                                            "feedback"
                                        ],
                                        "example": "video"
                                    },
                                    "is_required": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "settings": {
                                        "type": "object",
                                        "example": {
                                            "duration": 300,
                                            "autoplay": false
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Activity created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "block_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Introduction Video"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Watch this introduction video to understand the certification process",
                                                    "nullable": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "video",
                                                        "quiz",
                                                        "lesson",
                                                        "assignment",
                                                        "documentation",
                                                        "event",
                                                        "certificate",
                                                        "feedback"
                                                    ],
                                                    "example": "video"
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "is_required": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "settings": {
                                                    "type": "object",
                                                    "example": {
                                                        "duration": 300,
                                                        "autoplay": false
                                                    }
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Block not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/activities/{id}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Get a specific activity",
                "description": "Returns details of a specific activity",
                "operationId": "getActivity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "block_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction Video"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Watch this introduction video to understand the certification process",
                                                    "nullable": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "video",
                                                        "quiz",
                                                        "lesson",
                                                        "assignment",
                                                        "documentation",
                                                        "event",
                                                        "certificate",
                                                        "feedback"
                                                    ],
                                                    "example": "video"
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "is_required": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "estimated_time": {
                                                    "description": "Estimated time in minutes",
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "content": {
                                                    "description": "Content specific to the activity type",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Activities"
                ],
                "summary": "Update an activity",
                "description": "Updates an existing activity",
                "operationId": "updateActivity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Introduction Video"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description for the introduction video"
                                    },
                                    "is_required": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "settings": {
                                        "type": "object",
                                        "example": {
                                            "duration": 450,
                                            "autoplay": true
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Activity updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "block_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Introduction Video"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description for the introduction video",
                                                    "nullable": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "video",
                                                        "quiz",
                                                        "lesson",
                                                        "assignment",
                                                        "documentation",
                                                        "event",
                                                        "certificate",
                                                        "feedback"
                                                    ],
                                                    "example": "video"
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "is_required": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "settings": {
                                                    "type": "object",
                                                    "example": {
                                                        "duration": 450,
                                                        "autoplay": true
                                                    }
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Activities"
                ],
                "summary": "Delete an activity",
                "description": "Deletes an existing activity",
                "operationId": "deleteActivity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/blocks/{blockId}/activities/reorder": {
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Reorder activities",
                "description": "Updates the order of activities within a block",
                "operationId": "reorderActivities",
                "parameters": [
                    {
                        "name": "blockId",
                        "in": "path",
                        "description": "Block ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "activities"
                                ],
                                "properties": {
                                    "activities": {
                                        "description": "Array of activity data with new order",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id",
                                                "order"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Activities reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activities reordered successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "block_id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Introduction Video"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Watch this introduction video to understand the certification process",
                                                        "nullable": true
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "text",
                                                            "video",
                                                            "quiz",
                                                            "lesson",
                                                            "assignment",
                                                            "documentation",
                                                            "event",
                                                            "certificate",
                                                            "feedback"
                                                        ],
                                                        "example": "video"
                                                    },
                                                    "order": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "is_required": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "estimated_time": {
                                                        "description": "Estimated time in minutes",
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Block not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/activities/{activityId}/assignment-content": {
            "get": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Get assignment content for an activity",
                "description": "Retrieves assignment content for an assignment-type activity",
                "operationId": "getAssignmentContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assignment content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AssignmentContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Update assignment content for an activity",
                "description": "Updates assignment content for an assignment-type activity",
                "operationId": "updateAssignmentContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Assignment content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Final Project Submission"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Submit your final project demonstrating your understanding of certification concepts"
                                    },
                                    "submission_type": {
                                        "type": "string",
                                        "enum": [
                                            "file",
                                            "text",
                                            "url",
                                            "multiple_files"
                                        ],
                                        "example": "file"
                                    },
                                    "allowed_file_types": {
                                        "type": "string",
                                        "example": "pdf,doc,docx",
                                        "nullable": true
                                    },
                                    "max_file_size": {
                                        "description": "Maximum file size in bytes",
                                        "type": "integer",
                                        "example": 5000000,
                                        "nullable": true
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    },
                                    "points": {
                                        "type": "integer",
                                        "example": 100,
                                        "nullable": true
                                    },
                                    "rubric": {
                                        "type": "object",
                                        "nullable": true
                                    },
                                    "instructions": {
                                        "type": "string",
                                        "example": "Please follow these steps to complete your assignment...",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assignment content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Assignment content updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AssignmentContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Create assignment content for an activity",
                "description": "Creates new assignment content for an assignment-type activity",
                "operationId": "storeAssignmentContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Assignment content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "submission_type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Final Project Submission"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Submit your final project demonstrating your understanding of certification concepts"
                                    },
                                    "submission_type": {
                                        "type": "string",
                                        "enum": [
                                            "file",
                                            "text",
                                            "url",
                                            "multiple_files"
                                        ],
                                        "example": "file"
                                    },
                                    "allowed_file_types": {
                                        "type": "string",
                                        "example": "pdf,doc,docx",
                                        "nullable": true
                                    },
                                    "max_file_size": {
                                        "description": "Maximum file size in bytes",
                                        "type": "integer",
                                        "example": 5000000,
                                        "nullable": true
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    },
                                    "points": {
                                        "type": "integer",
                                        "example": 100,
                                        "nullable": true
                                    },
                                    "rubric": {
                                        "type": "object",
                                        "nullable": true
                                    },
                                    "instructions": {
                                        "type": "string",
                                        "example": "Please follow these steps to complete your assignment...",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Assignment content created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Assignment content created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AssignmentContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid activity type"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Delete assignment content for an activity",
                "description": "Deletes assignment content for an assignment-type activity",
                "operationId": "deleteAssignmentContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assignment content deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Assignment content deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tokens": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "a8652519a1ceb8f0d220e65810876a77",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "device_name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "iPhone 13"
                                    },
                                    "environment_id": {
                                        "description": "Optional environment ID for environment-specific authentication",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "1|laravel_sanctum_NvGqIuUGK6Vj5AEDlxSNRgVuIJxBMpLK4ryhfnLq"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "learner"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "environment_id": {
                                            "description": "The environment ID used for authentication, if applicable",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "operationId": "4eac88c29e3604e1d3edb5290bdd008c",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All tokens revoked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8e4e3cb7b46126f4696379d3c7eeb4ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "learner",
                                            "individual_teacher",
                                            "company_teacher"
                                        ],
                                        "example": "learner"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "example": "Acme Corp"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "1|laravel_sanctum_NvGqIuUGK6Vj5AEDlxSNRgVuIJxBMpLK4ryhfnLq"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "learner"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user details",
                "operationId": "961ad57987905b44ae2e2f40b82e76de",
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "user@example.com"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "learner"
                                        },
                                        "company_name": {
                                            "type": "string",
                                            "example": "Acme Corp",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link",
                "operationId": "20d78161b19ac6afb56924e74974ec46",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "operationId": "0a6624b616e4ba5a310a61d9f7418c35",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "1234567890abcdef"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/templates/{templateId}/blocks": {
            "get": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Get all blocks for a template",
                "description": "Returns a list of all blocks for a specific template",
                "operationId": "getTemplateBlocks",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "template_id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Introduction Video"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "A video introduction to the course",
                                                        "nullable": true
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "text",
                                                            "video",
                                                            "quiz",
                                                            "assignment",
                                                            "lesson",
                                                            "documentation",
                                                            "event",
                                                            "certificate",
                                                            "feedback"
                                                        ],
                                                        "example": "video"
                                                    },
                                                    "order": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "settings": {
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Template not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Create a new block",
                "description": "Creates a new block for a specific template",
                "operationId": "createBlock",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction Video"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A video introduction to the course"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "text",
                                            "video",
                                            "quiz",
                                            "assignment",
                                            "lesson",
                                            "documentation",
                                            "event",
                                            "certificate",
                                            "feedback"
                                        ],
                                        "example": "video"
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "settings": {
                                        "properties": {
                                            "duration": {
                                                "type": "integer",
                                                "example": 300
                                            },
                                            "autoplay": {
                                                "type": "boolean",
                                                "example": false
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Block created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Block created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "template_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction Video"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A video introduction to the course",
                                                    "nullable": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "video",
                                                        "quiz",
                                                        "assignment",
                                                        "lesson",
                                                        "documentation",
                                                        "event",
                                                        "certificate",
                                                        "feedback"
                                                    ],
                                                    "example": "video"
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "settings": {
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Template not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/templates/{templateId}/blocks/{id}": {
            "get": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Get a specific block",
                "description": "Returns details of a specific block in a template",
                "operationId": "getBlock",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Block ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "template_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction Video"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A video introduction to the course",
                                                    "nullable": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "video",
                                                        "quiz",
                                                        "assignment",
                                                        "lesson",
                                                        "documentation",
                                                        "event",
                                                        "certificate",
                                                        "feedback"
                                                    ],
                                                    "example": "video"
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "settings": {
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Template or block not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Update a block",
                "description": "Updates an existing block in a template",
                "operationId": "updateBlock",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Block ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Video Introduction"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description for the video introduction"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "text",
                                            "video",
                                            "quiz",
                                            "assignment",
                                            "lesson",
                                            "documentation",
                                            "event",
                                            "certificate",
                                            "feedback"
                                        ],
                                        "example": "video"
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "settings": {
                                        "properties": {
                                            "duration": {
                                                "type": "integer",
                                                "example": 450
                                            },
                                            "autoplay": {
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Block updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Block updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "template_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction Video"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A video introduction to the course",
                                                    "nullable": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "video",
                                                        "quiz",
                                                        "assignment",
                                                        "lesson",
                                                        "documentation",
                                                        "event",
                                                        "certificate",
                                                        "feedback"
                                                    ],
                                                    "example": "video"
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "settings": {
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Template or block not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Delete a block",
                "description": "Deletes an existing block from a template",
                "operationId": "deleteBlock",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Block ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Block deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Template or block not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/templates/{templateId}/blocks/reorder": {
            "post": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Reorder blocks",
                "description": "Updates the order of blocks in a template",
                "operationId": "reorderBlocks",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "blocks"
                                ],
                                "properties": {
                                    "blocks": {
                                        "description": "Array of block IDs in the desired order",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blocks reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Blocks reordered successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "template_id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Introduction Video"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "A video introduction to the course",
                                                        "nullable": true
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "text",
                                                            "video",
                                                            "quiz",
                                                            "assignment",
                                                            "lesson",
                                                            "documentation",
                                                            "event",
                                                            "certificate",
                                                            "feedback"
                                                        ],
                                                        "example": "video"
                                                    },
                                                    "order": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "settings": {
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Template not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/templates/{templateId}/blocks/{id}/duplicate": {
            "post": {
                "tags": [
                    "Blocks"
                ],
                "summary": "Duplicate a block",
                "description": "Creates a copy of an existing block in a template",
                "operationId": "duplicateBlock",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "Template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Block ID to duplicate",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block duplicated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Block duplicated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "template_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Introduction Video"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A video introduction to the course",
                                                    "nullable": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "video",
                                                        "quiz",
                                                        "assignment",
                                                        "lesson",
                                                        "documentation",
                                                        "event",
                                                        "certificate",
                                                        "feedback"
                                                    ],
                                                    "example": "video"
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "settings": {
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Template or block not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/branding": {
            "get": {
                "tags": [
                    "Branding"
                ],
                "summary": "Get user's branding settings",
                "description": "Returns the authenticated user's branding settings",
                "operationId": "getUserBranding",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Branding"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Branding settings not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Branding"
                ],
                "summary": "Store or update branding settings",
                "description": "Creates or updates the authenticated user's branding settings",
                "operationId": "storeBranding",
                "requestBody": {
                    "description": "Branding data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_name": {
                                        "type": "string",
                                        "example": "CSL Certification"
                                    },
                                    "primary_color": {
                                        "type": "string",
                                        "example": "#3498db"
                                    },
                                    "secondary_color": {
                                        "type": "string",
                                        "example": "#2ecc71"
                                    },
                                    "accent_color": {
                                        "type": "string",
                                        "example": "#e74c3c"
                                    },
                                    "font_family": {
                                        "type": "string",
                                        "example": "Roboto, sans-serif"
                                    },
                                    "custom_css": {
                                        "type": "string",
                                        "example": ".header { background-color: #f8f9fa; }"
                                    },
                                    "custom_js": {
                                        "type": "string",
                                        "example": "console.log('Custom JS loaded');"
                                    },
                                    "custom_domain": {
                                        "type": "string",
                                        "example": "learn.mycompany.com"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branding settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Branding settings updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Branding"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/branding/reset": {
            "post": {
                "tags": [
                    "Branding"
                ],
                "summary": "Reset branding settings",
                "description": "Resets the authenticated user's branding settings to default values",
                "operationId": "resetBranding",
                "responses": {
                    "200": {
                        "description": "Branding settings reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Branding settings reset successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Branding"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Branding settings not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/branding/preview": {
            "get": {
                "tags": [
                    "Branding"
                ],
                "summary": "Get branding preview",
                "description": "Returns a preview of the authenticated user's branding settings",
                "operationId": "getBrandingPreview",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "company_name": {
                                                    "type": "string",
                                                    "example": "CSL Certification"
                                                },
                                                "logo_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/branding/logos/company-logo.png"
                                                },
                                                "favicon_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/branding/favicons/favicon.ico"
                                                },
                                                "primary_color": {
                                                    "type": "string",
                                                    "example": "#3498db"
                                                },
                                                "secondary_color": {
                                                    "type": "string",
                                                    "example": "#2ecc71"
                                                },
                                                "accent_color": {
                                                    "type": "string",
                                                    "example": "#e74c3c"
                                                },
                                                "font_family": {
                                                    "type": "string",
                                                    "example": "Roboto, sans-serif"
                                                },
                                                "custom_css": {
                                                    "type": "string",
                                                    "example": ".header { background-color: #f8f9fa; }"
                                                },
                                                "custom_js": {
                                                    "type": "string",
                                                    "example": "console.log('Custom JS loaded');"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Branding settings not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/branding/public": {
            "get": {
                "tags": [
                    "Branding"
                ],
                "summary": "Get public branding settings",
                "description": "Returns the public branding settings for a specific domain",
                "operationId": "getPublicBranding",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "company_name": {
                                                    "type": "string",
                                                    "example": "CSL Certification"
                                                },
                                                "logo_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/branding/logos/company-logo.png"
                                                },
                                                "favicon_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/storage/branding/favicons/favicon.ico"
                                                },
                                                "primary_color": {
                                                    "type": "string",
                                                    "example": "#3498db"
                                                },
                                                "secondary_color": {
                                                    "type": "string",
                                                    "example": "#2ecc71"
                                                },
                                                "accent_color": {
                                                    "type": "string",
                                                    "example": "#e74c3c"
                                                },
                                                "font_family": {
                                                    "type": "string",
                                                    "example": "Roboto, sans-serif"
                                                },
                                                "custom_css": {
                                                    "type": "string",
                                                    "example": ".header { background-color: #f8f9fa; }"
                                                },
                                                "custom_js": {
                                                    "type": "string",
                                                    "example": "console.log('Custom JS loaded');"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Branding settings not found or not active"
                    }
                }
            }
        },
        "/activities/{activityId}/certificate-content": {
            "get": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Get certificate content for an activity",
                "description": "Retrieves certificate content for a certificate-type activity",
                "operationId": "getCertificateContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Certificate content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CertificateContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Update certificate content for an activity",
                "description": "Updates certificate content for a certificate-type activity",
                "operationId": "updateCertificateContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Certificate content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "CSL Certification of Completion"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This certificate is awarded for successful completion of the CSL Certification Program"
                                    },
                                    "template_type": {
                                        "type": "string",
                                        "enum": [
                                            "completion",
                                            "achievement",
                                            "participation",
                                            "custom"
                                        ],
                                        "example": "completion"
                                    },
                                    "background_image": {
                                        "type": "string",
                                        "example": "certificates/backgrounds/standard.jpg",
                                        "nullable": true
                                    },
                                    "logo": {
                                        "type": "string",
                                        "example": "certificates/logos/csl-logo.png",
                                        "nullable": true
                                    },
                                    "signature_image": {
                                        "type": "string",
                                        "example": "certificates/signatures/director.png",
                                        "nullable": true
                                    },
                                    "signatory_name": {
                                        "type": "string",
                                        "example": "Dr. Jane Smith",
                                        "nullable": true
                                    },
                                    "signatory_title": {
                                        "type": "string",
                                        "example": "Program Director",
                                        "nullable": true
                                    },
                                    "accent_color": {
                                        "type": "string",
                                        "example": "#336699",
                                        "nullable": true
                                    },
                                    "custom_fields": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Course Duration"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "120 Hours"
                                                },
                                                "position": {
                                                    "type": "string",
                                                    "enum": [
                                                        "header",
                                                        "body",
                                                        "footer"
                                                    ],
                                                    "example": "body"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Certificate content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Certificate content updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CertificateContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Create certificate content for an activity",
                "description": "Creates new certificate content for a certificate-type activity",
                "operationId": "storeCertificateContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Certificate content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "template_type"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "CSL Certification of Completion"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This certificate is awarded for successful completion of the CSL Certification Program"
                                    },
                                    "template_type": {
                                        "type": "string",
                                        "enum": [
                                            "completion",
                                            "achievement",
                                            "participation",
                                            "custom"
                                        ],
                                        "example": "completion"
                                    },
                                    "background_image": {
                                        "type": "string",
                                        "example": "certificates/backgrounds/standard.jpg",
                                        "nullable": true
                                    },
                                    "logo": {
                                        "type": "string",
                                        "example": "certificates/logos/csl-logo.png",
                                        "nullable": true
                                    },
                                    "signature_image": {
                                        "type": "string",
                                        "example": "certificates/signatures/director.png",
                                        "nullable": true
                                    },
                                    "signatory_name": {
                                        "type": "string",
                                        "example": "Dr. Jane Smith",
                                        "nullable": true
                                    },
                                    "signatory_title": {
                                        "type": "string",
                                        "example": "Program Director",
                                        "nullable": true
                                    },
                                    "accent_color": {
                                        "type": "string",
                                        "example": "#336699",
                                        "nullable": true
                                    },
                                    "custom_fields": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Course Duration"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "120 Hours"
                                                },
                                                "position": {
                                                    "type": "string",
                                                    "enum": [
                                                        "header",
                                                        "body",
                                                        "footer"
                                                    ],
                                                    "example": "body"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Certificate content created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Certificate content created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CertificateContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid activity type"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Delete certificate content for an activity",
                "description": "Deletes certificate content for a certificate-type activity",
                "operationId": "deleteCertificateContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Certificate content deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Certificate content deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get all courses",
                "description": "Returns a list of all courses with optional filtering",
                "operationId": "getCourses",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for filtering courses by title or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter courses by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "published",
                                "archived"
                            ]
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter courses by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "Filter courses by creator user ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "title",
                                "created_at",
                                "published_at",
                                "start_date"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of courses per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Course"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/courses?page=1"
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/courses?page=5"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/courses?page=2"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://example.com/api/courses"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 75
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Create a new course",
                "description": "Creates a new course from a template",
                "operationId": "createCourse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "template_id",
                                    "title",
                                    "description",
                                    "status"
                                ],
                                "properties": {
                                    "template_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to CSL Certification"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "introduction-to-csl-certification"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A comprehensive introduction to CSL certification standards"
                                    },
                                    "short_description": {
                                        "type": "string",
                                        "example": "Learn the basics of CSL certification"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published",
                                            "archived"
                                        ],
                                        "example": "draft"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "featured_image": {
                                        "type": "string",
                                        "example": "courses/featured/intro-csl.jpg"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-01-01T00:00:00Z"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-31T23:59:59Z"
                                    },
                                    "enrollment_limit": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "is_featured": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "meta_title": {
                                        "type": "string",
                                        "example": "Learn CSL Certification | CSL Platform"
                                    },
                                    "meta_description": {
                                        "type": "string",
                                        "example": "Comprehensive course on CSL certification standards"
                                    },
                                    "meta_keywords": {
                                        "type": "string",
                                        "example": "CSL, certification, learning"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Course"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{id}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get a specific course",
                "description": "Returns details of a specific course by ID or slug",
                "operationId": "getCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID or slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Course"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Courses"
                ],
                "summary": "Update a course",
                "description": "Updates an existing course",
                "operationId": "updateCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated CSL Certification Course"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "updated-csl-certification-course"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description for the CSL certification course"
                                    },
                                    "short_description": {
                                        "type": "string",
                                        "example": "Updated short description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published",
                                            "archived"
                                        ],
                                        "example": "published"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "featured_image": {
                                        "type": "string",
                                        "example": "courses/featured/updated-csl.jpg"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-02-01T00:00:00Z"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-31T23:59:59Z"
                                    },
                                    "enrollment_limit": {
                                        "type": "integer",
                                        "example": 150
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 129.99
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "is_featured": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "meta_title": {
                                        "type": "string",
                                        "example": "Updated Meta Title"
                                    },
                                    "meta_description": {
                                        "type": "string",
                                        "example": "Updated Meta Description"
                                    },
                                    "meta_keywords": {
                                        "type": "string",
                                        "example": "updated, keywords"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Course"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Courses"
                ],
                "summary": "Delete a course",
                "description": "Deletes an existing course",
                "operationId": "deleteCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{id}/publish": {
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Publish a course",
                "description": "Changes the status of a course to published",
                "operationId": "publishCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course published successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course published successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Course"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Course is already published"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{id}/archive": {
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Archive a course",
                "description": "Changes the status of a course to archived",
                "operationId": "archiveCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course archived successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course archived successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Course"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Course is already archived"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{id}/duplicate": {
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Duplicate a course",
                "description": "Creates a copy of an existing course",
                "operationId": "duplicateCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course duplicated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course duplicated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Course"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{courseId}/sections": {
            "get": {
                "tags": [
                    "Course Sections"
                ],
                "summary": "Get all sections for a course",
                "description": "Returns a list of all sections for a specific course",
                "operationId": "getCourseSections",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CourseSection"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Course not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Course Sections"
                ],
                "summary": "Create a new course section",
                "description": "Creates a new section for a specific course",
                "operationId": "createCourseSection",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to CSL Standards"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Overview of CSL certification standards"
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_visible": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Section created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CourseSection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{courseId}/sections/{id}": {
            "get": {
                "tags": [
                    "Course Sections"
                ],
                "summary": "Get a specific course section",
                "description": "Returns details of a specific section in a course",
                "operationId": "getCourseSection",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Section ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CourseSection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Course or section not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Course Sections"
                ],
                "summary": "Update a course section",
                "description": "Updates an existing section in a course",
                "operationId": "updateCourseSection",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Section ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Section Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated section description"
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "is_visible": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Section updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CourseSection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course or section not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Course Sections"
                ],
                "summary": "Delete a course section",
                "description": "Deletes an existing section from a course",
                "operationId": "deleteCourseSection",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Section ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Section deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course or section not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{courseId}/sections/reorder": {
            "post": {
                "tags": [
                    "Course Sections"
                ],
                "summary": "Reorder course sections",
                "description": "Updates the order of sections in a course",
                "operationId": "reorderCourseSections",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "sections"
                                ],
                                "properties": {
                                    "sections": {
                                        "description": "Array of section IDs in the desired order",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sections reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sections reordered successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CourseSection"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/courses/{courseId}/sections/{id}/toggle-visibility": {
            "post": {
                "tags": [
                    "Course Sections"
                ],
                "summary": "Toggle section visibility",
                "description": "Toggles the visibility of a course section",
                "operationId": "toggleSectionVisibility",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Section ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Section visibility toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Section visibility updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CourseSection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Course or section not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/activities/{activityId}/documentation-content": {
            "get": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Get documentation content for an activity",
                "description": "Retrieves documentation content for a documentation-type activity",
                "operationId": "getDocumentationContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Documentation content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DocumentationContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Update documentation content for an activity",
                "description": "Updates documentation content for a documentation-type activity",
                "operationId": "updateDocumentationContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Documentation content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "API Documentation"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This documentation covers the API endpoints and usage..."
                                    },
                                    "version": {
                                        "type": "string",
                                        "example": "1.0"
                                    },
                                    "format": {
                                        "type": "string",
                                        "enum": [
                                            "markdown",
                                            "html",
                                            "pdf"
                                        ],
                                        "example": "markdown"
                                    },
                                    "attachments": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "API Schema"
                                                },
                                                "file_path": {
                                                    "type": "string",
                                                    "example": "path/to/schema.json"
                                                },
                                                "file_type": {
                                                    "type": "string",
                                                    "example": "application/json"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "JSON schema for the API",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Documentation content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Documentation content updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DocumentationContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Create documentation content for an activity",
                "description": "Creates new documentation content for a documentation-type activity",
                "operationId": "storeDocumentationContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Documentation content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content",
                                    "version"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "API Documentation"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This documentation covers the API endpoints and usage..."
                                    },
                                    "version": {
                                        "type": "string",
                                        "example": "1.0"
                                    },
                                    "format": {
                                        "type": "string",
                                        "enum": [
                                            "markdown",
                                            "html",
                                            "pdf"
                                        ],
                                        "example": "markdown"
                                    },
                                    "attachments": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "API Schema"
                                                },
                                                "file_path": {
                                                    "type": "string",
                                                    "example": "path/to/schema.json"
                                                },
                                                "file_type": {
                                                    "type": "string",
                                                    "example": "application/json"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "JSON schema for the API",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Documentation content created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Documentation content created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DocumentationContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid activity type"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Delete documentation content for an activity",
                "description": "Deletes documentation content for a documentation-type activity",
                "operationId": "deleteDocumentationContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Documentation content deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Documentation content deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/environments": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "Get all environments for the authenticated user",
                "operationId": "42c6e24bf79441a8d987d9bb56e7e144",
                "responses": {
                    "200": {
                        "description": "List of environments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Acme Corp Training"
                                            },
                                            "primary_domain": {
                                                "type": "string",
                                                "example": "training.acmecorp.com"
                                            },
                                            "additional_domains": {
                                                "type": "string",
                                                "example": "learn.acmecorp.com,edu.acmecorp.com",
                                                "nullable": true
                                            },
                                            "theme_color": {
                                                "type": "string",
                                                "example": "#4F46E5"
                                            },
                                            "logo_url": {
                                                "type": "string",
                                                "example": "https://acmecorp.com/logo.png",
                                                "nullable": true
                                            },
                                            "favicon_url": {
                                                "type": "string",
                                                "example": "https://acmecorp.com/favicon.ico",
                                                "nullable": true
                                            },
                                            "is_active": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "owner_id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Corporate training environment for Acme Corp employees",
                                                "nullable": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "deleted_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Environments"
                ],
                "summary": "Create a new environment",
                "operationId": "075c0c7fa697cdc55709d0b5bc900566",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "primary_domain"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Acme Corp Training"
                                    },
                                    "primary_domain": {
                                        "type": "string",
                                        "example": "training.acmecorp.com"
                                    },
                                    "additional_domains": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "learn.acmecorp.com",
                                            "edu.acmecorp.com"
                                        ]
                                    },
                                    "theme_color": {
                                        "type": "string",
                                        "example": "#4F46E5"
                                    },
                                    "logo_url": {
                                        "type": "string",
                                        "example": "https://acmecorp.com/logo.png"
                                    },
                                    "favicon_url": {
                                        "type": "string",
                                        "example": "https://acmecorp.com/favicon.ico"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Corporate training environment for Acme Corp employees"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Environment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Acme Corp Training"
                                        },
                                        "primary_domain": {
                                            "type": "string",
                                            "example": "training.acmecorp.com"
                                        },
                                        "additional_domains": {
                                            "type": "string",
                                            "example": "learn.acmecorp.com,edu.acmecorp.com",
                                            "nullable": true
                                        },
                                        "theme_color": {
                                            "type": "string",
                                            "example": "#4F46E5"
                                        },
                                        "logo_url": {
                                            "type": "string",
                                            "example": "https://acmecorp.com/logo.png",
                                            "nullable": true
                                        },
                                        "favicon_url": {
                                            "type": "string",
                                            "example": "https://acmecorp.com/favicon.ico",
                                            "nullable": true
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "owner_id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Corporate training environment for Acme Corp employees",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "deleted_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/environments/{id}": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "Get a specific environment",
                "operationId": "53a927a009f583a41cf54fa268463a01",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Environment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Acme Corp Training"
                                        },
                                        "primary_domain": {
                                            "type": "string",
                                            "example": "training.acmecorp.com"
                                        },
                                        "additional_domains": {
                                            "type": "string",
                                            "example": "learn.acmecorp.com,edu.acmecorp.com",
                                            "nullable": true
                                        },
                                        "theme_color": {
                                            "type": "string",
                                            "example": "#4F46E5"
                                        },
                                        "logo_url": {
                                            "type": "string",
                                            "example": "https://acmecorp.com/logo.png",
                                            "nullable": true
                                        },
                                        "favicon_url": {
                                            "type": "string",
                                            "example": "https://acmecorp.com/favicon.ico",
                                            "nullable": true
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "owner_id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Corporate training environment for Acme Corp employees",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "deleted_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Environments"
                ],
                "summary": "Update an environment",
                "operationId": "dd86ffcee20c0951dbe5ef480776601e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "primary_domain"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Acme Corp Training"
                                    },
                                    "primary_domain": {
                                        "type": "string",
                                        "example": "training.acmecorp.com"
                                    },
                                    "additional_domains": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "learn.acmecorp.com",
                                            "edu.acmecorp.com"
                                        ]
                                    },
                                    "theme_color": {
                                        "type": "string",
                                        "example": "#4F46E5"
                                    },
                                    "logo_url": {
                                        "type": "string",
                                        "example": "https://acmecorp.com/logo.png"
                                    },
                                    "favicon_url": {
                                        "type": "string",
                                        "example": "https://acmecorp.com/favicon.ico"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Corporate training environment for Acme Corp employees"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Environment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Acme Corp Training"
                                        },
                                        "primary_domain": {
                                            "type": "string",
                                            "example": "training.acmecorp.com"
                                        },
                                        "additional_domains": {
                                            "type": "string",
                                            "example": "learn.acmecorp.com,edu.acmecorp.com",
                                            "nullable": true
                                        },
                                        "theme_color": {
                                            "type": "string",
                                            "example": "#4F46E5"
                                        },
                                        "logo_url": {
                                            "type": "string",
                                            "example": "https://acmecorp.com/logo.png",
                                            "nullable": true
                                        },
                                        "favicon_url": {
                                            "type": "string",
                                            "example": "https://acmecorp.com/favicon.ico",
                                            "nullable": true
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "owner_id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Corporate training environment for Acme Corp employees",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "deleted_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Environments"
                ],
                "summary": "Delete an environment",
                "operationId": "be22f93af0d3adb13fedd4283a6bb5f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Environment deleted successfully"
                    },
                    "404": {
                        "description": "Environment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/current-environment": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "Get the current environment based on domain",
                "operationId": "c61877d536af578153b7df5d95e86303",
                "responses": {
                    "200": {
                        "description": "Current environment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Acme Corp Training"
                                        },
                                        "primary_domain": {
                                            "type": "string",
                                            "example": "training.acmecorp.com"
                                        },
                                        "additional_domains": {
                                            "type": "string",
                                            "example": "learn.acmecorp.com,edu.acmecorp.com",
                                            "nullable": true
                                        },
                                        "theme_color": {
                                            "type": "string",
                                            "example": "#4F46E5"
                                        },
                                        "logo_url": {
                                            "type": "string",
                                            "example": "https://acmecorp.com/logo.png",
                                            "nullable": true
                                        },
                                        "favicon_url": {
                                            "type": "string",
                                            "example": "https://acmecorp.com/favicon.ico",
                                            "nullable": true
                                        },
                                        "is_active": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "owner_id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Corporate training environment for Acme Corp employees",
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "deleted_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No environment found for this domain"
                    }
                }
            }
        },
        "/api/environments/{id}/users": {
            "get": {
                "tags": [
                    "Environments"
                ],
                "summary": "Get all users in an environment",
                "operationId": "a39ee94970a70c26762d24deb62e46b5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users in the environment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Environment not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Environments"
                ],
                "summary": "Add a user to an environment",
                "operationId": "b29ba1b6d13ae490e8f9949153bc24f9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "instructor"
                                    },
                                    "permissions": {
                                        "type": "object",
                                        "example": {
                                            "create_course": true,
                                            "manage_users": false
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User added to environment successfully"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Environment or user not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/environments/{id}/users/{userId}": {
            "delete": {
                "tags": [
                    "Environments"
                ],
                "summary": "Remove a user from an environment",
                "operationId": "2d65a0a79fdfe00cdcd0a3ed0cd0f7ba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User removed from environment successfully"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Environment or user not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/environment-credentials/{environmentId}": {
            "get": {
                "tags": [
                    "Environment Credentials"
                ],
                "summary": "Get environment-specific credentials",
                "description": "Returns whether the user has environment-specific credentials for the specified environment",
                "operationId": "getEnvironmentCredentials",
                "parameters": [
                    {
                        "name": "environmentId",
                        "in": "path",
                        "description": "Environment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "has_environment_credentials": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "environment_email": {
                                                    "type": "string",
                                                    "example": "user@company.com"
                                                },
                                                "email_verified": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment not found or user not associated with environment"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Environment Credentials"
                ],
                "summary": "Update environment-specific credentials",
                "description": "Updates the environment-specific credentials for the current user",
                "operationId": "updateEnvironmentCredentials",
                "parameters": [
                    {
                        "name": "environmentId",
                        "in": "path",
                        "description": "Environment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Credential data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "environment_email",
                                    "password"
                                ],
                                "properties": {
                                    "environment_email": {
                                        "type": "string",
                                        "example": "user@company.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "new-password"
                                    },
                                    "use_environment_credentials": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Credentials updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Environment credentials updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment not found or user not associated with environment"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Environment Credentials"
                ],
                "summary": "Disable environment-specific credentials",
                "description": "Disables the environment-specific credentials for the current user",
                "operationId": "disableEnvironmentCredentials",
                "parameters": [
                    {
                        "name": "environmentId",
                        "in": "path",
                        "description": "Environment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credentials disabled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Environment credentials disabled successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Environment not found or user not associated with environment"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/activities/{activityId}/event-content": {
            "get": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Get event content for an activity",
                "description": "Retrieves event content for an event-type activity",
                "operationId": "getEventContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Update event content for an activity",
                "description": "Updates event content for an event-type activity",
                "operationId": "updateEventContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Event content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Certification Workshop"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Join us for a hands-on workshop on certification standards"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-04-15T09:00:00Z"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-04-15T17:00:00Z"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Virtual Meeting Room"
                                    },
                                    "location_type": {
                                        "type": "string",
                                        "enum": [
                                            "online",
                                            "in_person",
                                            "hybrid"
                                        ],
                                        "example": "online"
                                    },
                                    "max_attendees": {
                                        "type": "integer",
                                        "example": 100,
                                        "nullable": true
                                    },
                                    "registration_required": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "registration_url": {
                                        "type": "string",
                                        "example": "https://example.com/register",
                                        "nullable": true
                                    },
                                    "speakers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Doe"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Certification Expert"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "Jane is a leading expert in certification standards",
                                                    "nullable": true
                                                },
                                                "photo_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/photos/jane.jpg",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event content updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Create event content for an activity",
                "description": "Creates new event content for an event-type activity",
                "operationId": "storeEventContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Event content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "start_date",
                                    "end_date",
                                    "location"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Certification Workshop"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Join us for a hands-on workshop on certification standards"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-04-15T09:00:00Z"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-04-15T17:00:00Z"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Virtual Meeting Room"
                                    },
                                    "location_type": {
                                        "type": "string",
                                        "enum": [
                                            "online",
                                            "in_person",
                                            "hybrid"
                                        ],
                                        "example": "online"
                                    },
                                    "max_attendees": {
                                        "type": "integer",
                                        "example": 100,
                                        "nullable": true
                                    },
                                    "registration_required": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "registration_url": {
                                        "type": "string",
                                        "example": "https://example.com/register",
                                        "nullable": true
                                    },
                                    "speakers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Doe"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Certification Expert"
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "Jane is a leading expert in certification standards",
                                                    "nullable": true
                                                },
                                                "photo_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/photos/jane.jpg",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event content created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event content created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EventContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid activity type"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Delete event content for an activity",
                "description": "Deletes event content for an event-type activity",
                "operationId": "deleteEventContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event content deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event content deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/activities/{activityId}/feedback-content": {
            "get": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Get feedback content for an activity",
                "description": "Gets the feedback content for a feedback-type activity",
                "operationId": "getFeedbackContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FeedbackContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Update feedback content for an activity",
                "description": "Updates the feedback content for a feedback-type activity",
                "operationId": "updateFeedbackContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Feedback content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Course Feedback Survey"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Please provide your feedback on the certification course"
                                    },
                                    "is_anonymous": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "questions": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "q1"
                                                },
                                                "text": {
                                                    "type": "string",
                                                    "example": "How would you rate the overall course content?"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "rating",
                                                        "text",
                                                        "multiple_choice",
                                                        "checkbox"
                                                    ],
                                                    "example": "rating"
                                                },
                                                "required": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "value": {
                                                                "type": "string",
                                                                "example": "excellent"
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "Excellent"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback content updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FeedbackContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Create feedback content for an activity",
                "description": "Creates new feedback content for a feedback-type activity",
                "operationId": "storeFeedbackContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Feedback content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "questions"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Course Feedback Survey"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Please provide your feedback on the certification course"
                                    },
                                    "is_anonymous": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "questions": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "q1"
                                                },
                                                "text": {
                                                    "type": "string",
                                                    "example": "How would you rate the overall course content?"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "rating",
                                                        "text",
                                                        "multiple_choice",
                                                        "checkbox"
                                                    ],
                                                    "example": "rating"
                                                },
                                                "required": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "order": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "value": {
                                                                "type": "string",
                                                                "example": "excellent"
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "Excellent"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Feedback content created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback content created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FeedbackContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid activity type"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Delete feedback content for an activity",
                "description": "Deletes the feedback content for a feedback-type activity",
                "operationId": "deleteFeedbackContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback content deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback content deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/activities/{activityId}/lesson-content": {
            "get": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Get lesson content for an activity",
                "description": "Retrieves lesson content for a lesson-type activity",
                "operationId": "getLessonContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lesson content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/LessonContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Update lesson content for an activity",
                "description": "Updates lesson content for a lesson-type activity",
                "operationId": "updateLessonContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Lesson content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Certification Standards"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This lesson covers the fundamental concepts of certification standards..."
                                    },
                                    "estimated_duration": {
                                        "description": "Estimated duration in minutes",
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "resources": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "example": "Certification Standards Guide"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pdf",
                                                        "link",
                                                        "image",
                                                        "document"
                                                    ],
                                                    "example": "pdf"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://example.com/resources/guide.pdf"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Comprehensive guide to certification standards",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "objectives": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Understand the purpose of certification standards"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lesson content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson content updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/LessonContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Create lesson content for an activity",
                "description": "Creates new lesson content for a lesson-type activity",
                "operationId": "storeLessonContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Lesson content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Certification Standards"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This lesson covers the fundamental concepts of certification standards..."
                                    },
                                    "estimated_duration": {
                                        "description": "Estimated duration in minutes",
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "resources": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "example": "Certification Standards Guide"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pdf",
                                                        "link",
                                                        "image",
                                                        "document"
                                                    ],
                                                    "example": "pdf"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://example.com/resources/guide.pdf"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Comprehensive guide to certification standards",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "objectives": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "Understand the purpose of certification standards"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Lesson content created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson content created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/LessonContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid activity type"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Delete lesson content for an activity",
                "description": "Deletes lesson content for a lesson-type activity",
                "operationId": "deleteLessonContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lesson content deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson content deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/onboarding/business-learner": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Onboard a batch of business learners",
                "description": "Create multiple user accounts for business learners and associate them with an environment",
                "operationId": "onboardBusinessLearners",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "environment_id",
                                    "learners"
                                ],
                                "properties": {
                                    "environment_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "learners": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "name",
                                                "email"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john@example.com"
                                                },
                                                "employee_id": {
                                                    "type": "string",
                                                    "example": "EMP123"
                                                },
                                                "department": {
                                                    "type": "string",
                                                    "example": "Engineering"
                                                },
                                                "position": {
                                                    "type": "string",
                                                    "example": "Software Developer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "send_invitations": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "custom_message": {
                                        "type": "string",
                                        "example": "Welcome to our learning platform!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Business learners onboarded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business learners onboarded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "environment_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "learners_created": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "learner_ids": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/onboarding/business-teacher": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Onboard a new business teacher",
                "description": "Create a new user account, environment, and subscription for a business teacher",
                "operationId": "onboardBusinessTeacher",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "company_name",
                                    "environment_name",
                                    "domain",
                                    "plan_id",
                                    "billing_cycle"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "example": "ABC Corporation"
                                    },
                                    "environment_name": {
                                        "type": "string",
                                        "example": "ABC Training Academy"
                                    },
                                    "domain": {
                                        "type": "string",
                                        "example": "abc-training.csl-cert.com"
                                    },
                                    "plan_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "billing_cycle": {
                                        "type": "string",
                                        "enum": [
                                            "monthly",
                                            "annual"
                                        ],
                                        "example": "annual"
                                    },
                                    "theme_color": {
                                        "type": "string",
                                        "example": "#3366FF"
                                    },
                                    "logo_url": {
                                        "type": "string",
                                        "example": "https://example.com/logo.png"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Corporate training platform for ABC Corp"
                                    },
                                    "additional_admins": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Smith"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "jane@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Business teacher onboarded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business teacher onboarded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "environment_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "subscription_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "additional_admins": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/onboarding/learner": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Onboard a new individual learner",
                "description": "Create a new user account for an individual learner and associate them with an environment",
                "operationId": "onboardLearner",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "environment_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "environment_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Learner onboarded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Learner onboarded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "environment_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/onboarding/teacher": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Onboard a new individual teacher",
                "description": "Create a new user account, environment, and subscription for an individual teacher",
                "operationId": "onboardTeacher",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "environment_name",
                                    "domain",
                                    "plan_id",
                                    "billing_cycle"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "environment_name": {
                                        "type": "string",
                                        "example": "John's Academy"
                                    },
                                    "domain": {
                                        "type": "string",
                                        "example": "johns-academy.csl-cert.com"
                                    },
                                    "plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "billing_cycle": {
                                        "type": "string",
                                        "enum": [
                                            "monthly",
                                            "annual"
                                        ],
                                        "example": "monthly"
                                    },
                                    "theme_color": {
                                        "type": "string",
                                        "example": "#FF5733"
                                    },
                                    "logo_url": {
                                        "type": "string",
                                        "example": "https://example.com/logo.png"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A platform for teaching computer science"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Teacher onboarded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Teacher onboarded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "environment_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "subscription_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of orders",
                "description": "Returns paginated list of orders with optional filtering",
                "operationId": "getOrdersList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for order number or customer name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by order status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "completed",
                                "cancelled",
                                "refunded"
                            ]
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by user ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "description": "Minimum order amount filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "description": "Maximum order amount filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter orders created after this date (format: Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter orders created before this date (format: Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "total_amount",
                                "status"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Order"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "description": "Creates a new order with the provided products and billing information",
                "operationId": "storeOrder",
                "requestBody": {
                    "description": "Order data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "items"
                                ],
                                "properties": {
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "product_id",
                                                "quantity"
                                            ],
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "referral_code": {
                                        "type": "string",
                                        "example": "WELCOME10",
                                        "nullable": true
                                    },
                                    "billing_name": {
                                        "type": "string",
                                        "example": "John Doe",
                                        "nullable": true
                                    },
                                    "billing_email": {
                                        "type": "string",
                                        "example": "john@example.com",
                                        "nullable": true
                                    },
                                    "billing_address": {
                                        "type": "string",
                                        "example": "123 Main St",
                                        "nullable": true
                                    },
                                    "billing_city": {
                                        "type": "string",
                                        "example": "New York",
                                        "nullable": true
                                    },
                                    "billing_state": {
                                        "type": "string",
                                        "example": "NY",
                                        "nullable": true
                                    },
                                    "billing_zip": {
                                        "type": "string",
                                        "example": "10001",
                                        "nullable": true
                                    },
                                    "billing_country": {
                                        "type": "string",
                                        "example": "US",
                                        "nullable": true
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Please deliver to the front door",
                                        "nullable": true
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "credit_card",
                                        "nullable": true
                                    },
                                    "payment_id": {
                                        "type": "string",
                                        "example": "pay_123456789",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/orders/my-orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get current user's orders",
                "description": "Returns paginated list of the authenticated user's orders",
                "operationId": "getUserOrders",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by order status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "completed",
                                "cancelled",
                                "refunded"
                            ]
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "total_amount",
                                "status"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Order"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details",
                "description": "Returns details of a specific order",
                "operationId": "getOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/orders/{id}/status": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update order status",
                "description": "Updates the status of an existing order",
                "operationId": "updateOrderStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Order status data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "processing",
                                            "completed",
                                            "cancelled",
                                            "refunded"
                                        ],
                                        "example": "processing"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Order is being processed",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order status updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Returns paginated list of products with optional filtering",
                "operationId": "getProductsList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for product name or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by product status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "active",
                                "inactive"
                            ]
                        }
                    },
                    {
                        "name": "is_subscription",
                        "in": "query",
                        "description": "Filter by subscription type",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "name",
                                "price",
                                "status",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Product"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Creates a new product with the provided data",
                "operationId": "storeProduct",
                "requestBody": {
                    "description": "Product data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price",
                                    "currency",
                                    "is_subscription",
                                    "status"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "CSL Certification Course"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Complete certification course for CSL professionals"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    },
                                    "discount_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 79.99,
                                        "nullable": true
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "is_subscription": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "subscription_interval": {
                                        "type": "string",
                                        "example": "monthly",
                                        "nullable": true
                                    },
                                    "subscription_interval_count": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "trial_days": {
                                        "type": "integer",
                                        "example": 14,
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "thumbnail_path": {
                                        "type": "string",
                                        "example": "products/thumbnail.jpg",
                                        "nullable": true
                                    },
                                    "courses": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details",
                "description": "Returns details of a specific product",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product",
                "description": "Updates an existing product with the provided data",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Product data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated CSL Course"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 129.99
                                    },
                                    "discount_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99,
                                        "nullable": true
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "is_subscription": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "subscription_interval": {
                                        "type": "string",
                                        "example": "monthly",
                                        "nullable": true
                                    },
                                    "subscription_interval_count": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "trial_days": {
                                        "type": "integer",
                                        "example": 14,
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "thumbnail_path": {
                                        "type": "string",
                                        "example": "products/new-thumbnail.jpg",
                                        "nullable": true
                                    },
                                    "courses": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete product",
                "description": "Deletes a product if it has no associated orders",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete product with existing orders"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products/{id}/activate": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Activate product",
                "description": "Sets the product status to active",
                "operationId": "activateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product activated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product activated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products/{id}/deactivate": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Deactivate product",
                "description": "Sets the product status to inactive",
                "operationId": "deactivateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product deactivated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/activities/{activityId}/quiz-content": {
            "get": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Get quiz content for an activity",
                "description": "Retrieves quiz content for a quiz-type activity",
                "operationId": "getQuizContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/QuizContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Update quiz content for an activity",
                "description": "Updates existing quiz content for a quiz-type activity",
                "operationId": "updateQuizContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Quiz content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Module 1 Assessment"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Test your knowledge of the concepts covered in Module 1",
                                        "nullable": true
                                    },
                                    "time_limit": {
                                        "description": "Time limit in seconds",
                                        "type": "integer",
                                        "example": 600,
                                        "nullable": true
                                    },
                                    "passing_score": {
                                        "description": "Passing score percentage",
                                        "type": "integer",
                                        "example": 70
                                    },
                                    "allow_retakes": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "randomize_questions": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "questions": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "question",
                                                "type",
                                                "options",
                                                "correct_answer"
                                            ],
                                            "properties": {
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the purpose of a certification platform?"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "multiple_choice",
                                                        "true_false",
                                                        "matching",
                                                        "short_answer",
                                                        "essay"
                                                    ],
                                                    "example": "multiple_choice"
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "To provide structured learning paths"
                                                    }
                                                },
                                                "correct_answer": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "points": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quiz content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz content updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/QuizContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Create quiz content for an activity",
                "description": "Creates new quiz content for a quiz-type activity",
                "operationId": "storeQuizContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Quiz content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "questions",
                                    "passing_score"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Module 1 Assessment"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Test your knowledge of the concepts covered in Module 1",
                                        "nullable": true
                                    },
                                    "time_limit": {
                                        "description": "Time limit in seconds",
                                        "type": "integer",
                                        "example": 600,
                                        "nullable": true
                                    },
                                    "passing_score": {
                                        "description": "Passing score percentage",
                                        "type": "integer",
                                        "example": 70
                                    },
                                    "allow_retakes": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "randomize_questions": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "questions": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "question",
                                                "type",
                                                "options",
                                                "correct_answer"
                                            ],
                                            "properties": {
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the purpose of a certification platform?"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "multiple_choice",
                                                        "true_false",
                                                        "matching",
                                                        "short_answer",
                                                        "essay"
                                                    ],
                                                    "example": "multiple_choice"
                                                },
                                                "options": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "To provide structured learning paths"
                                                    }
                                                },
                                                "correct_answer": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "points": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Quiz content created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz content created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/QuizContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid activity type"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Delete quiz content for an activity",
                "description": "Deletes existing quiz content for a quiz-type activity",
                "operationId": "deleteQuizContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz content deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz content deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/referrals": {
            "get": {
                "tags": [
                    "Referrals"
                ],
                "summary": "Get list of referrals",
                "description": "Returns paginated list of referrals with optional filtering",
                "operationId": "getReferralsList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for referral code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "referrer_id",
                        "in": "query",
                        "description": "Filter by referrer user ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "discount_type",
                        "in": "query",
                        "description": "Filter by discount type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "percentage",
                                "fixed"
                            ]
                        }
                    },
                    {
                        "name": "min_discount",
                        "in": "query",
                        "description": "Minimum discount value filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "max_discount",
                        "in": "query",
                        "description": "Maximum discount value filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "code",
                                "discount_value",
                                "uses_count"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Referral"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Referrals"
                ],
                "summary": "Create a new referral",
                "description": "Creates a new referral code with the provided data",
                "operationId": "storeReferral",
                "requestBody": {
                    "description": "Referral data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "discount_type",
                                    "discount_value"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Optional. If not provided, a random code will be generated",
                                        "type": "string",
                                        "example": "WELCOME10"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "enum": [
                                            "percentage",
                                            "fixed"
                                        ],
                                        "example": "percentage"
                                    },
                                    "discount_value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "max_uses": {
                                        "type": "integer",
                                        "example": 100,
                                        "nullable": true
                                    },
                                    "expires_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-12-31T23:59:59Z",
                                        "nullable": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Referral created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Referral created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Referral"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/referrals/{id}": {
            "get": {
                "tags": [
                    "Referrals"
                ],
                "summary": "Get referral details",
                "description": "Returns details of a specific referral",
                "operationId": "getReferralById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Referral ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Referral"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Referral not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Referrals"
                ],
                "summary": "Update referral",
                "description": "Updates an existing referral with the provided data",
                "operationId": "updateReferral",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Referral ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Referral data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "SUMMER25"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "enum": [
                                            "percentage",
                                            "fixed"
                                        ],
                                        "example": "percentage"
                                    },
                                    "discount_value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25
                                    },
                                    "max_uses": {
                                        "type": "integer",
                                        "example": 200,
                                        "nullable": true
                                    },
                                    "expires_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-12-31T23:59:59Z",
                                        "nullable": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Referral updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Referral updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Referral"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Referral not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Referrals"
                ],
                "summary": "Delete referral",
                "description": "Deletes a referral if it has no associated orders",
                "operationId": "deleteReferral",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Referral ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Referral deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Referral deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot delete referral with existing orders"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Referral not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/referrals/validate": {
            "post": {
                "tags": [
                    "Referrals"
                ],
                "summary": "Validate referral code",
                "description": "Validates a referral code and returns discount information if valid",
                "operationId": "validateReferralCode",
                "requestBody": {
                    "description": "Referral code to validate",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "WELCOME10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Referral code validation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "valid": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "discount_type": {
                                                    "type": "string",
                                                    "example": "percentage"
                                                },
                                                "discount_value": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid referral code"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/templates": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Get list of templates",
                "description": "Returns paginated list of templates that are either created by the authenticated user or are public",
                "operationId": "getTemplatesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Template"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Create a new template",
                "description": "Creates a new template",
                "operationId": "createTemplate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "CSL Certification Course Template"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A template for creating certification courses"
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "draft"
                                    },
                                    "thumbnail_path": {
                                        "type": "string",
                                        "example": "path/to/thumbnail"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Template created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Template created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/templates/{id}": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "summary": "Get a template by ID",
                "description": "Returns a template by ID",
                "operationId": "getTemplateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Template not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Templates"
                ],
                "summary": "Update a template",
                "description": "Updates a template",
                "operationId": "updateTemplate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "CSL Certification Course Template"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A template for creating certification courses"
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "draft"
                                    },
                                    "thumbnail_path": {
                                        "type": "string",
                                        "example": "path/to/thumbnail"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Template updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Template updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Templates"
                ],
                "summary": "Delete a template",
                "description": "Deletes a template",
                "operationId": "deleteTemplate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Template deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Template deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Template not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/templates/{id}/duplicate": {
            "post": {
                "tags": [
                    "Templates"
                ],
                "summary": "Duplicate a template",
                "description": "Duplicates a template",
                "operationId": "duplicateTemplate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Template duplicated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Template duplicated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Template"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Template not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/activities/{activityId}/text-content": {
            "get": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Get text content for an activity",
                "description": "Gets the text content for a text-type activity",
                "operationId": "getTextContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Text content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TextContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Update text content for an activity",
                "description": "Updates the text content for a text-type activity",
                "operationId": "updateTextContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Text content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "This is the updated text content for the activity."
                                    },
                                    "format": {
                                        "type": "string",
                                        "enum": [
                                            "plain",
                                            "markdown",
                                            "html"
                                        ],
                                        "example": "markdown"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Text content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Text content updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TextContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Create text content for an activity",
                "description": "Creates new text content for a text-type activity",
                "operationId": "storeTextContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Text content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content",
                                    "format"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "This is the text content for the activity."
                                    },
                                    "format": {
                                        "type": "string",
                                        "enum": [
                                            "plain",
                                            "markdown",
                                            "html"
                                        ],
                                        "example": "markdown"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Text content created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Text content created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TextContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid activity type"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Delete text content for an activity",
                "description": "Deletes the text content for a text-type activity",
                "operationId": "deleteTextContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Text content deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Text content deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/activities/{activityId}/video-content": {
            "get": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Get video content for an activity",
                "description": "Gets video content for a video-type activity",
                "operationId": "getVideoContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video content retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/VideoContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Update video content for an activity",
                "description": "Updates video content for a video-type activity",
                "operationId": "updateVideoContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Video content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "New description",
                                        "nullable": true
                                    },
                                    "video_url": {
                                        "type": "string",
                                        "example": "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
                                    },
                                    "video_type": {
                                        "type": "string",
                                        "enum": [
                                            "youtube",
                                            "vimeo",
                                            "mp4",
                                            "webm"
                                        ],
                                        "example": "youtube"
                                    },
                                    "duration": {
                                        "description": "Duration in seconds",
                                        "type": "integer",
                                        "example": 180,
                                        "nullable": true
                                    },
                                    "thumbnail_url": {
                                        "type": "string",
                                        "example": "https://img.youtube.com/vi/dQw4w9WgXcQ/maxresdefault.jpg",
                                        "nullable": true
                                    },
                                    "transcript": {
                                        "type": "string",
                                        "example": "This is the video transcript...",
                                        "nullable": true
                                    },
                                    "captions_url": {
                                        "type": "string",
                                        "example": "https://example.com/captions.vtt",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Video content updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Video content updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/VideoContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Create video content for an activity",
                "description": "Creates new video content for a video-type activity",
                "operationId": "storeVideoContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Video content data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url",
                                    "provider",
                                    "duration"
                                ],
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "example": "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
                                    },
                                    "provider": {
                                        "type": "string",
                                        "enum": [
                                            "youtube",
                                            "vimeo",
                                            "wistia",
                                            "custom"
                                        ],
                                        "example": "youtube"
                                    },
                                    "duration": {
                                        "description": "Duration in seconds",
                                        "type": "integer",
                                        "example": 180
                                    },
                                    "thumbnail_url": {
                                        "type": "string",
                                        "example": "https://img.youtube.com/vi/dQw4w9WgXcQ/maxresdefault.jpg",
                                        "nullable": true
                                    },
                                    "transcript": {
                                        "type": "string",
                                        "example": "This is the video transcript...",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Video content created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Video content created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/VideoContent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid activity type"
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Content Types"
                ],
                "summary": "Delete video content for an activity",
                "description": "Deletes video content for a video-type activity",
                "operationId": "deleteVideoContent",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "ID of the activity",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video content deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Video content deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have permission"
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "instructor",
                            "student"
                        ],
                        "example": "instructor"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AssignmentContent": {
                "required": [
                    "activity_id",
                    "title",
                    "description",
                    "submission_type"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "activity_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Final Project Submission"
                    },
                    "description": {
                        "type": "string",
                        "example": "Submit your final project demonstrating your understanding of certification concepts"
                    },
                    "submission_type": {
                        "type": "string",
                        "enum": [
                            "file",
                            "text",
                            "url",
                            "multiple_files"
                        ],
                        "example": "file"
                    },
                    "allowed_file_types": {
                        "type": "string",
                        "example": "pdf,doc,docx",
                        "nullable": true
                    },
                    "max_file_size": {
                        "description": "Maximum file size in bytes",
                        "type": "integer",
                        "example": 5000000,
                        "nullable": true
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "points": {
                        "type": "integer",
                        "example": 100,
                        "nullable": true
                    },
                    "rubric": {
                        "type": "object",
                        "nullable": true
                    },
                    "instructions": {
                        "type": "string",
                        "example": "Please follow these steps to complete your assignment...",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Branding": {
                "required": [
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "company_name": {
                        "type": "string",
                        "example": "CSL Certification",
                        "nullable": true
                    },
                    "logo_path": {
                        "type": "string",
                        "example": "branding/logos/company-logo.png",
                        "nullable": true
                    },
                    "favicon_path": {
                        "type": "string",
                        "example": "branding/favicons/favicon.ico",
                        "nullable": true
                    },
                    "primary_color": {
                        "type": "string",
                        "example": "#3498db",
                        "nullable": true
                    },
                    "secondary_color": {
                        "type": "string",
                        "example": "#2ecc71",
                        "nullable": true
                    },
                    "accent_color": {
                        "type": "string",
                        "example": "#e74c3c",
                        "nullable": true
                    },
                    "font_family": {
                        "type": "string",
                        "example": "Roboto, sans-serif",
                        "nullable": true
                    },
                    "custom_css": {
                        "type": "string",
                        "example": ".header { background-color: #f8f9fa; }",
                        "nullable": true
                    },
                    "custom_js": {
                        "type": "string",
                        "example": "console.log('Custom JS loaded');",
                        "nullable": true
                    },
                    "custom_domain": {
                        "type": "string",
                        "example": "learn.mycompany.com",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "CertificateContent": {
                "required": [
                    "activity_id",
                    "title",
                    "description",
                    "template_type"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "activity_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "CSL Certification of Completion"
                    },
                    "description": {
                        "type": "string",
                        "example": "This certificate is awarded for successful completion of the CSL Certification Program"
                    },
                    "template_type": {
                        "type": "string",
                        "enum": [
                            "completion",
                            "achievement",
                            "participation",
                            "custom"
                        ],
                        "example": "completion"
                    },
                    "background_image": {
                        "type": "string",
                        "example": "certificates/backgrounds/standard.jpg",
                        "nullable": true
                    },
                    "logo": {
                        "type": "string",
                        "example": "certificates/logos/csl-logo.png",
                        "nullable": true
                    },
                    "signature_image": {
                        "type": "string",
                        "example": "certificates/signatures/director.png",
                        "nullable": true
                    },
                    "signatory_name": {
                        "type": "string",
                        "example": "Dr. Jane Smith",
                        "nullable": true
                    },
                    "signatory_title": {
                        "type": "string",
                        "example": "Program Director",
                        "nullable": true
                    },
                    "accent_color": {
                        "type": "string",
                        "example": "#336699",
                        "nullable": true
                    },
                    "custom_fields": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Course Duration"
                                },
                                "value": {
                                    "type": "string",
                                    "example": "120 Hours"
                                },
                                "position": {
                                    "type": "string",
                                    "enum": [
                                        "header",
                                        "body",
                                        "footer"
                                    ],
                                    "example": "body"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Course": {
                "required": [
                    "title",
                    "template_id",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Introduction to CSL Certification"
                    },
                    "slug": {
                        "type": "string",
                        "example": "introduction-to-csl-certification"
                    },
                    "description": {
                        "type": "string",
                        "example": "A comprehensive introduction to CSL certification standards",
                        "nullable": true
                    },
                    "template_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "published",
                            "archived"
                        ],
                        "example": "published"
                    },
                    "featured_image": {
                        "type": "string",
                        "example": "courses/featured/intro-csl.jpg",
                        "nullable": true
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "enrollment_limit": {
                        "type": "integer",
                        "example": 100,
                        "nullable": true
                    },
                    "is_featured": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_by": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CourseSection": {
                "required": [
                    "course_id",
                    "title",
                    "order"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "course_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Introduction to CSL Standards"
                    },
                    "description": {
                        "type": "string",
                        "example": "Overview of CSL certification standards",
                        "nullable": true
                    },
                    "order": {
                        "type": "integer",
                        "example": 1
                    },
                    "is_visible": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DocumentationContent": {
                "required": [
                    "activity_id",
                    "title",
                    "content",
                    "version"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "activity_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "API Documentation"
                    },
                    "content": {
                        "type": "string",
                        "example": "This documentation covers the API endpoints and usage..."
                    },
                    "version": {
                        "type": "string",
                        "example": "1.0"
                    },
                    "format": {
                        "type": "string",
                        "enum": [
                            "markdown",
                            "html",
                            "pdf"
                        ],
                        "example": "markdown"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "API Schema"
                                },
                                "file_path": {
                                    "type": "string",
                                    "example": "path/to/schema.json"
                                },
                                "file_type": {
                                    "type": "string",
                                    "example": "application/json"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "JSON schema for the API",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Enrollment": {
                "required": [
                    "user_id",
                    "course_id",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "course_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "completed",
                            "expired",
                            "cancelled"
                        ],
                        "example": "active"
                    },
                    "enrollment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "completion_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "john@example.com"
                            }
                        },
                        "type": "object"
                    },
                    "course": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            },
                            "title": {
                                "type": "string",
                                "example": "Introduction to CSL Certification"
                            },
                            "status": {
                                "type": "string",
                                "example": "published"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "EventContent": {
                "required": [
                    "activity_id",
                    "title",
                    "description",
                    "start_date",
                    "end_date",
                    "location"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "activity_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Certification Workshop"
                    },
                    "description": {
                        "type": "string",
                        "example": "Join us for a hands-on workshop on certification standards"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-15T09:00:00Z"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-15T17:00:00Z"
                    },
                    "location": {
                        "type": "string",
                        "example": "Virtual Meeting Room"
                    },
                    "location_type": {
                        "type": "string",
                        "enum": [
                            "online",
                            "in_person",
                            "hybrid"
                        ],
                        "example": "online"
                    },
                    "max_attendees": {
                        "type": "integer",
                        "example": 100,
                        "nullable": true
                    },
                    "registration_required": {
                        "type": "boolean",
                        "example": true
                    },
                    "registration_url": {
                        "type": "string",
                        "example": "https://example.com/register",
                        "nullable": true
                    },
                    "speakers": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Jane Doe"
                                },
                                "title": {
                                    "type": "string",
                                    "example": "Certification Expert"
                                },
                                "bio": {
                                    "type": "string",
                                    "example": "Jane is a leading expert in certification standards",
                                    "nullable": true
                                },
                                "photo_url": {
                                    "type": "string",
                                    "example": "https://example.com/photos/jane.jpg",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "FeedbackContent": {
                "required": [
                    "activity_id",
                    "title",
                    "description",
                    "questions"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "activity_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Course Feedback Survey"
                    },
                    "description": {
                        "type": "string",
                        "example": "Please provide your feedback on the certification course"
                    },
                    "is_anonymous": {
                        "type": "boolean",
                        "example": true
                    },
                    "questions": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "q1"
                                },
                                "text": {
                                    "type": "string",
                                    "example": "How would you rate the overall course content?"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "rating",
                                        "text",
                                        "multiple_choice",
                                        "checkbox"
                                    ],
                                    "example": "rating"
                                },
                                "required": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "order": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "options": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "value": {
                                                "type": "string",
                                                "example": "excellent"
                                            },
                                            "label": {
                                                "type": "string",
                                                "example": "Excellent"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LessonContent": {
                "required": [
                    "activity_id",
                    "title",
                    "content"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "activity_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Introduction to Certification Standards"
                    },
                    "content": {
                        "type": "string",
                        "example": "This lesson covers the fundamental concepts of certification standards..."
                    },
                    "estimated_duration": {
                        "description": "Estimated duration in minutes",
                        "type": "integer",
                        "example": 30
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "example": "Certification Standards Guide"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "pdf",
                                        "link",
                                        "image",
                                        "document"
                                    ],
                                    "example": "pdf"
                                },
                                "url": {
                                    "type": "string",
                                    "example": "https://example.com/resources/guide.pdf"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Comprehensive guide to certification standards",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    },
                    "objectives": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Understand the purpose of certification standards"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Order": {
                "required": [
                    "user_id",
                    "total_amount",
                    "currency",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "order_number": {
                        "type": "string",
                        "example": "ORD-2025-0001"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "completed",
                            "cancelled",
                            "refunded"
                        ],
                        "example": "pending"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "currency": {
                        "type": "string",
                        "example": "USD"
                    },
                    "payment_method": {
                        "type": "string",
                        "example": "credit_card",
                        "nullable": true
                    },
                    "payment_id": {
                        "type": "string",
                        "example": "pay_123456789",
                        "nullable": true
                    },
                    "billing_name": {
                        "type": "string",
                        "example": "John Doe",
                        "nullable": true
                    },
                    "billing_email": {
                        "type": "string",
                        "example": "john@example.com",
                        "nullable": true
                    },
                    "billing_address": {
                        "type": "string",
                        "example": "123 Main St",
                        "nullable": true
                    },
                    "billing_city": {
                        "type": "string",
                        "example": "New York",
                        "nullable": true
                    },
                    "billing_state": {
                        "type": "string",
                        "example": "NY",
                        "nullable": true
                    },
                    "billing_zip": {
                        "type": "string",
                        "example": "10001",
                        "nullable": true
                    },
                    "billing_country": {
                        "type": "string",
                        "example": "US",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "example": "Please deliver to the front door",
                        "nullable": true
                    },
                    "referral_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1
                                },
                                "order_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1
                                },
                                "product_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1
                                },
                                "quantity": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "price": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 99.99
                                }
                            },
                            "type": "object"
                        }
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "john@example.com"
                            }
                        },
                        "type": "object"
                    },
                    "referral": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                            },
                            "code": {
                                "type": "string",
                                "example": "WELCOME10"
                            },
                            "discount_type": {
                                "type": "string",
                                "example": "percentage"
                            },
                            "discount_value": {
                                "type": "number",
                                "format": "float",
                                "example": 10
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Product": {
                "required": [
                    "name",
                    "description",
                    "price",
                    "currency",
                    "is_subscription",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "CSL Certification Course"
                    },
                    "description": {
                        "type": "string",
                        "example": "Complete certification course for CSL professionals"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "discount_price": {
                        "type": "number",
                        "format": "float",
                        "example": 79.99,
                        "nullable": true
                    },
                    "currency": {
                        "type": "string",
                        "example": "USD"
                    },
                    "is_subscription": {
                        "type": "boolean",
                        "example": true
                    },
                    "subscription_interval": {
                        "type": "string",
                        "example": "monthly",
                        "nullable": true
                    },
                    "subscription_interval_count": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "trial_days": {
                        "type": "integer",
                        "example": 14,
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    },
                    "thumbnail_path": {
                        "type": "string",
                        "example": "products/thumbnail.jpg",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "courses": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "title": {
                                    "type": "string",
                                    "example": "Introduction to CSL"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "QuizContent": {
                "required": [
                    "activity_id",
                    "title",
                    "questions",
                    "passing_score"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "activity_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Module 1 Assessment"
                    },
                    "description": {
                        "type": "string",
                        "example": "Test your knowledge of the concepts covered in Module 1",
                        "nullable": true
                    },
                    "time_limit": {
                        "description": "Time limit in seconds",
                        "type": "integer",
                        "example": 600,
                        "nullable": true
                    },
                    "passing_score": {
                        "description": "Passing score percentage",
                        "type": "integer",
                        "example": 70
                    },
                    "allow_retakes": {
                        "type": "boolean",
                        "example": true
                    },
                    "randomize_questions": {
                        "type": "boolean",
                        "example": false
                    },
                    "questions": {
                        "type": "array",
                        "items": {
                            "required": [
                                "question",
                                "type",
                                "options",
                                "correct_answer"
                            ],
                            "properties": {
                                "question": {
                                    "type": "string",
                                    "example": "What is the purpose of a certification platform?"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "multiple_choice",
                                        "true_false",
                                        "matching",
                                        "short_answer",
                                        "essay"
                                    ],
                                    "example": "multiple_choice"
                                },
                                "options": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "To provide structured learning paths"
                                    }
                                },
                                "correct_answer": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "points": {
                                    "type": "integer",
                                    "example": 10
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Referral": {
                "required": [
                    "referrer_id",
                    "code",
                    "discount_type",
                    "discount_value",
                    "is_active"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "referrer_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "code": {
                        "type": "string",
                        "example": "WELCOME10"
                    },
                    "discount_type": {
                        "type": "string",
                        "enum": [
                            "percentage",
                            "fixed"
                        ],
                        "example": "percentage"
                    },
                    "discount_value": {
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "max_uses": {
                        "type": "integer",
                        "example": 100,
                        "nullable": true
                    },
                    "uses_count": {
                        "type": "integer",
                        "example": 5
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "referrer": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Template": {
                "required": [
                    "title",
                    "description",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "CSL Certification Course Template"
                    },
                    "description": {
                        "type": "string",
                        "example": "A template for creating certification courses"
                    },
                    "is_public": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_by": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "blocks": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1
                                },
                                "template_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 1
                                },
                                "title": {
                                    "type": "string",
                                    "example": "Introduction Video"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "A video introduction to the course",
                                    "nullable": true
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "text",
                                        "video",
                                        "quiz",
                                        "assignment",
                                        "lesson",
                                        "documentation",
                                        "event",
                                        "certificate",
                                        "feedback"
                                    ],
                                    "example": "video"
                                },
                                "order": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "settings": {
                                    "type": "object",
                                    "nullable": true
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "creator": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "TextContent": {
                "required": [
                    "activity_id",
                    "content",
                    "format"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "activity_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "content": {
                        "type": "string",
                        "example": "This is the text content for the activity."
                    },
                    "format": {
                        "type": "string",
                        "enum": [
                            "plain",
                            "markdown",
                            "html"
                        ],
                        "example": "markdown"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "VideoContent": {
                "required": [
                    "activity_id",
                    "url",
                    "provider",
                    "duration"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "activity_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "url": {
                        "type": "string",
                        "example": "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
                    },
                    "provider": {
                        "type": "string",
                        "enum": [
                            "youtube",
                            "vimeo",
                            "wistia",
                            "custom"
                        ],
                        "example": "youtube"
                    },
                    "duration": {
                        "description": "Duration in seconds",
                        "type": "integer",
                        "example": 180
                    },
                    "thumbnail_url": {
                        "type": "string",
                        "example": "https://img.youtube.com/vi/dQw4w9WgXcQ/maxresdefault.jpg",
                        "nullable": true
                    },
                    "transcript": {
                        "type": "string",
                        "example": "This is the video transcript...",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Environment": {
                "title": "Environment",
                "description": "Environment model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Acme Corp Training"
                    },
                    "primary_domain": {
                        "type": "string",
                        "example": "training.acmecorp.com"
                    },
                    "additional_domains": {
                        "type": "string",
                        "example": "learn.acmecorp.com,edu.acmecorp.com",
                        "nullable": true
                    },
                    "theme_color": {
                        "type": "string",
                        "example": "#4F46E5"
                    },
                    "logo_url": {
                        "type": "string",
                        "example": "https://acmecorp.com/logo.png",
                        "nullable": true
                    },
                    "favicon_url": {
                        "type": "string",
                        "example": "https://acmecorp.com/favicon.ico",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "owner_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "description": {
                        "type": "string",
                        "example": "Corporate training environment for Acme Corp employees",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication. The system supports environment-specific authentication, allowing users to have different credentials for different environments. When logging in, you can optionally specify an environment_id to use environment-specific credentials."
        },
        {
            "name": "Templates",
            "description": "API endpoints for template management"
        },
        {
            "name": "Blocks",
            "description": "API endpoints for block management"
        },
        {
            "name": "Activities",
            "description": "API endpoints for activity management"
        },
        {
            "name": "Courses",
            "description": "API endpoints for course management"
        },
        {
            "name": "Activity Completions",
            "description": "API endpoints for activity completion tracking"
        },
        {
            "name": "Products",
            "description": "API endpoints for product management"
        },
        {
            "name": "Orders",
            "description": "API endpoints for order management"
        },
        {
            "name": "Referrals",
            "description": "API endpoints for referral management"
        },
        {
            "name": "Branding",
            "description": "API endpoints for branding management"
        },
        {
            "name": "Environments",
            "description": "API Endpoints for managing environments"
        },
        {
            "name": "Content Types",
            "description": "Content Types"
        },
        {
            "name": "Course Sections",
            "description": "Course Sections"
        },
        {
            "name": "Environment Credentials",
            "description": "Environment Credentials"
        },
        {
            "name": "Onboarding",
            "description": "Onboarding"
        }
    ]
}