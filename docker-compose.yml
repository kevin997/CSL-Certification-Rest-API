# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
version: '3.8'

services:
  # Combined Laravel App with Nginx
  app:
    image: localhost:5000/csl-certification-rest-api:latest
    container_name: csl-certification-rest-api
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./storage:/var/www/html/storage:delegated
      - ./bootstrap/cache:/var/www/html/bootstrap/cache:delegated
    environment:
      - APP_ENV=${APP_ENV:-staging}
      - APP_DEBUG=${APP_DEBUG:-false}
      # AWS RDS connection settings
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - CONTAINER_ROLE=app
    networks:
      - csl-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health/index.php"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  
  # Queue Worker Service
  queue:
    image: localhost:5000/csl-certification-rest-api:latest
    container_name: csl-certification-rest-api-queue
    restart: unless-stopped
    depends_on:
      app:
        condition: service_started
    volumes:
      - ./storage:/var/www/html/storage
    environment:
      - CONTAINER_ROLE=queue
      # AWS RDS connection settings
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG:-false}
      - QUEUE_CONNECTION=database
    networks:
      - csl-network
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep 'supervisord' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      
  # WebSocket Server (Laravel Reverb)
  reverb:
    image: localhost:5000/csl-certification-rest-api:latest
    container_name: csl-certification-rest-api-reverb
    restart: unless-stopped
    depends_on:
      app:
        condition: service_started
    ports:
      - "8085:8080"
    volumes:
      - ./storage:/var/www/html/storage
    environment:
      - CONTAINER_ROLE=reverb
      # AWS RDS connection settings
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG:-false}
      # Reverb configuration
      - REVERB_APP_ID=${REVERB_APP_ID}
      - REVERB_APP_KEY=${REVERB_APP_KEY}
      - REVERB_APP_SECRET=${REVERB_APP_SECRET}
      - REVERB_HOST=0.0.0.0
      - REVERB_PORT=8080
    networks:
      - csl-network
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep 'reverb:start' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  csl-network:
    driver: bridge
